apiVersion: v1
kind: Pod
metadata:
  name: "{{pod_name}}"
  labels:
    sdbuild: "{{build_id_with_prefix}}"
    app: screwdriver
    tier: builds
spec:
  serviceAccount: {{service_account}}
  automountServiceAccountToken: false
  restartPolicy: Never
  {{#startsWith "adeteam/ubuntu-virt" container}}
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet
  {{/startsWith}}
  containers:
  - name: build
    image: {{container}}
    imagePullPolicy: Always
    resources:
      limits:
        cpu: {{cpu}}m
        memory: {{memory}}Gi
        {{#startsWith "adeteam/ubuntu-virt" container}}
        ephemeral-storage: 40Gi
        {{/startsWith}}
    {{#if docker.enabled}}
    env:
      - name: DOCKER_HOST
        value: tcp://localhost:2375
    {{/if}}
    command:
    - "/opt/sd/launcher_entrypoint.sh"
    args:
    # Run the wrapper script
    - |
      /opt/sd/run.sh "{{token}}" "{{api_uri}}" "{{store_uri}}" "{{build_timeout}}" "{{build_id}}" "{{ui_uri}}"
    volumeMounts:
    - mountPath: /opt/sd
      name: screwdriver
    - mountPath: /sd
      name: workspace
    - mountPath: /hab
      name: habitat
    {{#startsWith "adeteam/ubuntu-virt" container}}
    securityContext:
      privileged: true
    {{/startsWith}}
  {{#if docker.enabled}}
  - name: dind
    image: docker:18.05-dind
    resources:
      limits:
        cpu: {{docker.cpu }}m
        memory: {{docker.memory }}Gi
    securityContext:
      privileged: true
    volumeMounts:
      - name: dind-storage
        mountPath: /var/lib/docker
  {{/if}}

  initContainers:
  - name: launcher
    image: {{launcher_image}}
    command: ['/bin/sh', '-c', 'cp -a /opt/sd/* /opt/launcher && cp -a /hab/* /opt/hab']
    volumeMounts:
    - mountPath: /opt/launcher
      name: screwdriver
    - mountPath: /opt/hab
      name: habitat
  volumes:
    - name: screwdriver
      emptyDir: {}
    - name: habitat
      emptyDir: {}
    - name: workspace
      emptyDir: {}
    {{#if docker.enabled}}
    - name: dind-storage
      emptyDir: {}
    {{/if}}